name: Build for Linux

on:
     push:
          branches:
             - main
          paths:
             - 'package.json'
     workflow_dispatch:


jobs:
     build-and-release-linux:
          runs-on: ubuntu-latest

          permissions:
               contents: write

          steps:
             - name: Checkout code
               uses: actions/checkout@v4

             - name: Install pnpm
               uses: pnpm/action-setup@v4
               with:
                    version: latest

             - name: Use Node.js 20
               uses: actions/setup-node@v4
               with:
                    node-version: 20
                    cache: 'pnpm'
                    cache-dependency-path: pnpm-lock.yaml

             - name: Install dependencies
               run: pnpm install

             - name: Build Electron app for Linux
               run: pnpm build:release

             - name: Get version from package.json
               id: get_version
               run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

             - name: Create Tag
               uses: actions/github-script@v7
               with:
                    script: |
                         const version = process.env.VERSION;
                         const tag = `v${version}`;
                         github.rest.git.createRef({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              ref: `refs/tags/${tag}`,
                              sha: context.sha
                         });
                         console.log(`Created tag: ${tag}`);
               env:
                    VERSION: ${{ steps.get_version.outputs.VERSION }}

             - name: Create Release and Upload Asset
               uses: softprops/action-gh-release@v1
               if: startsWith(github.ref, 'refs/tags/')
               with:
                    files: release/*
                    tag_name: v${{ steps.get_version.outputs.VERSION }}
               env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
